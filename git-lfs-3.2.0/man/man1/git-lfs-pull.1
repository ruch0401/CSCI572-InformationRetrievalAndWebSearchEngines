.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "GIT\-LFS\-PULL" "1" "May 2022" ""
.SH "NAME"
\fBgit\-lfs\-pull\fR \- Download all Git LFS files for current ref & checkout
.SH "SYNOPSIS"
\fBgit lfs pull\fR [options] [\fIremote\fR]
.SH "DESCRIPTION"
Download Git LFS objects for the currently checked out ref, and update the working copy with the downloaded content if required\.
.P
This is equivalent to running the following 2 commands:
.P
git lfs fetch [options] [\fIremote\fR] git lfs checkout
.SH "OPTIONS"
.TP
\fB\-I\fR \fIpaths\fR \fB\-\-include=\fR\fIpaths\fR
Specify lfs\.fetchinclude just for this invocation; see \fIINCLUDE AND EXCLUDE\fR
.TP
\fB\-X\fR \fIpaths\fR \fB\-\-exclude=\fR\fIpaths\fR
Specify lfs\.fetchexclude just for this invocation; see \fIINCLUDE AND EXCLUDE\fR
.SH "INCLUDE AND EXCLUDE"
You can configure Git LFS to only fetch objects to satisfy references in certain paths of the repo, and/or to exclude certain paths of the repo, to reduce the time you spend downloading things you do not use\.
.P
In your Git configuration or in a \fB\.lfsconfig\fR file, you may set either or both of \fBlfs\.fetchinclude\fR and \fBlfs\.fetchexclude\fR to comma\-separated lists of paths\. If \fBlfs\.fetchinclude\fR is defined, Git LFS objects will only be fetched if their path matches one in that list, and if \fBlfs\.fetchexclude\fR is defined, Git LFS objects will only be fetched if their path does not match one in that list\. Paths are matched using wildcard matching as per gitignore(5)\.
.P
Note that using the command\-line options \fB\-I\fR and \fB\-X\fR override the respective configuration settings\. Setting either option to an empty string clears the value\.
.SH "DEFAULT REMOTE"
Without arguments, pull downloads from the default remote\. The default remote is the same as for \fBgit pull\fR, i\.e\. based on the remote branch you\'re tracking first, or origin otherwise\.
.SH "SEE ALSO"
git\-lfs\-fetch(1), git\-lfs\-checkout(1), gitignore(5)\.
.P
Part of the git\-lfs(1) suite\.
