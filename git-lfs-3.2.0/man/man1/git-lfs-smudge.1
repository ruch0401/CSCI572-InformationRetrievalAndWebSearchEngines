.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "GIT\-LFS\-SMUDGE" "1" "May 2022" ""
.SH "NAME"
\fBgit\-lfs\-smudge\fR \- Git smudge filter that converts pointer in blobs to the actual content
.SH "SYNOPSIS"
\fBgit lfs smudge\fR [\fIpath\fR] \fBgit lfs smudge\fR \-\-skip [\fIpath\fR]
.SH "DESCRIPTION"
Read a Git LFS pointer file from standard input and write the contents of the corresponding large file to standard output\. If needed, download the file\'s contents from the Git LFS endpoint\. The \fIpath\fR argument, if provided, is only used for a progress bar\.
.P
Smudge is typically run by Git\'s smudge filter, configured by the repository\'s Git attributes\.
.P
In your Git configuration or in a \fB\.lfsconfig\fR file, you may set either or both of \fBlfs\.fetchinclude\fR and \fBlfs\.fetchexclude\fR to comma\-separated lists of paths\. If \fBlfs\.fetchinclude\fR is defined, Git LFS pointer files will only be replaced with the contents of the corresponding Git LFS object file if their path matches one in that list, and if \fBlfs\.fetchexclude\fR is defined, Git LFS pointer files will only be replaced with the contents of the corresponding Git LFS object file if their path does not match one in that list\. Paths are matched using wildcard matching as per gitignore(5)\. Git LFS pointer files that are not replaced with the contents of their corresponding object files are simply copied to standard output without change\.
.SH "OPTIONS"
Without any options, \fBgit lfs smudge\fR outputs the raw Git LFS content to standard output\.
.TP
\fB\-\-skip\fR
Skip automatic downloading of objects on clone or pull\.
.TP
\fBGIT_LFS_SKIP_SMUDGE\fR
Disables the smudging process\. For more, see: git\-lfs\-config(5)\.
.SH "KNOWN BUGS"
On Windows, Git before 2\.34\.0 does not handle files in the working tree larger than 4 gigabytes\. Newer versions of Git, as well as Unix versions, are unaffected\.
.SH "SEE ALSO"
git\-lfs\-install(1), gitattributes(5), gitignore(5)\.
.P
Part of the git\-lfs(1) suite\.
